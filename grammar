# Lines starting with # are comments

# CAPITALIZED_ITEMS are regular expressions

Program => Statement*

Statement => ( Print | VariableDeclaration | Expression ) ';'

Print => ( 'print' | 'println' ) Expression

VariableDeclaration =>
	type IDENTIFIER ( ':=' Expression )? ( ',' IDENTIFIER ( ':=' Expression )? )*

type => 'int' | 'float' | 'boolean' | 'string' | 'void'

Expression => ( IDENTIFIER '=' Expression ) | LogicalOr ;

LogicalOr => LogicalAnd ( 'or' LogicalAnd )*

LogicalAnd => BitwiseXor ( 'and' BitwiseXor )*

BitwiseXor => BitwiseOr ( '^' BitwiseOr )*

BitwiseOr => BitwiseAnd ( '|' BitwiseAnd )*

BitwiseAnd => Equality ( '&' Equality )*

Equality => Comparison ( ( '!=' | '==' ) Comparison )*

Comparison => Shift ( ( '>' | '>=' | '<' | '<=' ) Shift )*

Shift => Term ( ( '>>' | '<<' ) Term )*

Term => Factor ( ( '-' | '+' ) Factor )*

Factor => Exponential ( ( '*' | '/' | '//' | '%' ) Exponential )*

Exponential => Unary ( '**' Unary )*

Unary => ( ( '!' | '-' | '+' | '~' ) Unary ) | Primary

Primary => Cast | Block | Group | IDENTIFIER | Literal

Cast => '(' type ')' Primary

Block => '{' ( Statement | Return )* '}'

Return => 'return' Expression

Group => '(' Expression ')'

Literal => Void | Boolean | Number | STRING

Void => 'void'

Boolean => 'true' | 'false'

Number => INTEGER | FLOAT
